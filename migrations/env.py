# migrations/env.py
from __future__ import annotations

from logging.config import fileConfig
from alembic import context
from sqlalchemy import engine_from_config, pool

# ???? ?????? ???????????? ????????????? ?????? ? ????????? ? alembic.ini
config = context.config

# ????????? ????? (????? ???????? ??? ????)
if config.config_file_name is not None:
    fileConfig(config.config_file_name)

# ???? ???????? ????????????? ?? ??????? — ???? ????? ?????????? db.metadata
# target_metadata = db.metadata
target_metadata = None  # ?????? ???????? ??????? ?????????? - ??? ??????????

def run_migrations_offline():
    """?????? ? offline-?????? (??? ??????????? ? ??)."""
    url = config.get_main_option("sqlalchemy.url")
    context.configure(
        url=url,
        target_metadata=target_metadata,
        literal_binds=True,
        dialect_opts={"paramstyle": "named"},
        compare_type=True,
        compare_server_default=True,
    )
    with context.begin_transaction():
        context.run_migrations()

def run_migrations_online():
    """?????? ? online-?????? (? ???????????? ? ??)."""
    connectable = engine_from_config(
        config.get_section(config.config_ini_section),
        prefix="sqlalchemy.",
        poolclass=pool.NullPool,
    )
    with connectable.connect() as connection:
        context.configure(
            connection=connection,
            target_metadata=target_metadata,
            compare_type=True,
            compare_server_default=True,
        )
        with context.begin_transaction():
            context.run_migrations()

if context.is_offline_mode():
    run_migrations_offline()
else:
    run_migrations_online()
